#!/usr/bin/env python
from setup_utils import *
import os

# icat.oaipmh

def undeploy():
    app = actions.getAppName("icat.oaipmh")
    if app: actions.undeploy(app)

actions, arg, props = getActions("setup.properties", [])

prop_name = "run.properties"
prop_list = ["icat.url", "icat.auth", "repositoryName", "adminEmails", "requestUrl", "maxResults", "data.mainObject", "metadataPrefixes"]

properties = getProperties(prop_name, prop_list)

if arg in ["CONFIGURE", "INSTALL"]:
    actions.configure(prop_name, prop_list)
    actions.checkNoErrors()

if arg == "INSTALL":

    if len(properties["icat.auth"].split()) != 5:
        abort("Invalid value for 'icat.auth' in run.properties")

    try:
        val = int(properties["maxResults"])
        if val < 1:
            abort("The value for 'maxResults' is less than 1 in run.properties")
    except ValueError:
        abort("The value for 'maxResults' is no integer in run.properties")

    if "oai_dc" not in properties["metadataPrefixes"].split():
        abort("Support for the metadataPrefix 'oai_dc' is missing in run.properties")

    for v in properties["metadataPrefixes"].split():
        if v + ".xslt" not in properties:
            abort("metadataPrefixes include '" + v + "' but '" + v + ".xslt' is not defined in run.properties")
        if not os.path.exists(properties[v + ".xslt"]):
            abort("The file '" + properties[v + ".xslt"] + "' as listed in run.properties for '" + v + ".xslt' does not exist on your system")
        if v + ".namespace" not in properties:
            abort("metadataPrefixes include '" + v + "' but '" + v + ".namespace' is not defined in run.properties")
        if v + ".schema" not in properties:
            abort("metadataPrefixes include '" + v + "' but '" + v + ".schema' is not defined in run.properties")

    try:
        undeploy()
        ovfiles = [[prop_name, "WEB-INF/classes"]]
        if os.path.exists("logback.xml"): ovfiles.append(["logback.xml", "WEB-INF/classes"])
        actions.deploy(deploymentorder=80, files=ovfiles)
    except Exception, e:
        abort(str(e))

if arg == "UNINSTALL":
    try:
        undeploy()
    except Exception, e:
        abort(str(e))
