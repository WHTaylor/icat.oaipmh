<html>

<head>
	<title>installation</title>
</head>

<body>

	<h1>Installation</h1>

	<h2>Compatibility</h2>
	This plugin will work with an ICAT version of 4.9.0 or greater.

	<h2>Prerequisites</h2>

	<ul>
		<li>
			The icat_oaipmh distribution:
			<a
				href="${repoUrl}/org/icatproject/icat.oaipmh/${project.version}/icat.oaipmh-${project.version}-distro.zip">
				icat_oaipmh-${project.version}-distro.zip
			</a>
		</li>
		<li>
			A suitable deployed container (here assumed to be Glassfish/Payara)
			to support a web application. Testing has been carried out with payara41.
			<a href="http://icatproject.org/installation/glassfish/">
				Glassfish/Payara installation instructions
			</a>
			are available.
		</li>

		<li>Python (version 2.4 to 2.7) installed on the server.</li>
	</ul>


	<h2>Summary of steps</h2>
	<ol>
		<li>
			Please follow
			<a href="http://icatproject.org/installation/component/">
				the generic installation instructions
			</a>
		</li>
		<li>
			Check that it works.
		</li>
	</ol>


	<h2>The setup.properties file</h2>
	<dl>
		<dt>container</dt>
		<dd>
			Values must be chosen from:
			<a target="_blank"
				href="http://www.eclipse.org/eclipselink/api/2.6/org/eclipse/persistence/config/TargetServer.html">
				TargetServer
			</a>
			Though only Glassfish is working properly at the moment.
		</dd>
		<dt>home</dt>
		<dd>
			is the top level of the container installation.
			For Glassfish it must contain "glassfish/domains" and
			for JBoss (wildfly) it must contain jboss-modules.jar.
		</dd>
		<dt>port</dt>
		<dd>
			is the administration port of the container
			which is typically 4848 for Glassfish and 9990 for JBoss.
		</dd>
		<dt>secure</dt>
		<dd>
			must be set to true or false.
			If true then only https and not http connections will be allowed.
		</dd>
	</dl>


	<h2>The logback.xml file</h2>
	<p>
		If you wish to modify the provided logging levels then rename
		logback.xml.example to logback.xml and edit it to suit your needs.
	</p>


	<h2>The run.properties file</h2>
	<dl>
		<dt>icat.url</dt>
		<dd>
			The url of the machine hosting the icat service.
			It should normally just have the scheme, the hostname and the port.
		</dd>
		<dd>
			Example value: <b>"https://example.com:443"</b>
		</dd>
		<dt>icat.auth</dt>
		<dd>
			Space separated icat plugin name and credentials for a user
			permitted to read all the ICAT tables that are of interest.
		</dd>
		<dd>
			Example value: <b>"simple username nick password 123456"</b>
		</dd>
		<dt>repositoryName</dt>
		<dd>
			A human readable name for the repository.
			The name will be returned as part of the OAI-PMH "Identify" response.
		</dd>
		<dd>
			Example value: <b>"Example experimental data repository"</b>
		</dd>
		<dt>adminEmails</dt>
		<dd>
			A space separated list of e-mail addresses of the repository administrator.
			The email addresses will be returned as part of the OAI-PMH "Identify" response.
		</dd>
		<dd>
			Example value: <b>"someone@example.com another@example.org"</b>
		</dd>
		<dt>requestUrl</dt>
		<dd>
			The Base URL of the OAI-PMH interface.
			Must be a well-formed URL.
			This will be returned as part of the OAI-PMH "Identify" response,
			and is being used for the unique identifiers of records.
		</dd>
		<dd>
			Example value: <b>"https://www.example.org/oaipmh/request"</b>
		</dd>
		<dt>maxResults</dt>
		<dd>
			The maximum number of results per page for incomplete responses.
			Must be an integer greater than 0.
		</dd>
		<dd>
			Example value: <b>"50"</b>
		</dd>
		<dt>data.mainObject</dt>
		<dd>
			The main ICAT object (from ICAT metadata schema) which the repository is about.
		</dd>
		<dd>
			Example value: <b>"Investigation"</b>
		</dd>
		<dt>data.&lt;icatObject&gt;.subPropertyLists</dt>
		<dd>
			A space separated list of ICAT sub-objects which are to be included in the property hierarchy
			below the <code>&lt;icatObject&gt;</code>.
		</dd>
		<dd>
			For example, if the <code>mainObject</code> is <b>"Investigation"</b>, one might use
			<b>"data.subPropertyLists = datasets"</b> and
			<b>"data.datasets.subPropertyLists = datafiles parameters"</b>
			to include the datasets as part an investigation,
			and the datafiles and parameters as part of a dataset.
		</dd>
		<dt>data.&lt;icatObject&gt;.&lt;dataTypeProperties&gt;</dt>
		<dd>
			A space separated list of ICAT properties to be retrieved from ICAT
			for the <code>&lt;icatObject&gt;</code> when making queries for OAI-PMH.
			Possible <code>&lt;dataTypeProperties&gt;</code> are:
			"stringProperties", "numericProperties", or "dateProperties",
			depending on the data type within ICAT.
		</dd>
		<dd>
			For example, if the <code>mainObject</code> is <b>"Investigation"</b>, and
			<code>data.subPropertyLists</code> is set to <b>"investigationUsers"</b> and
			<code>data.investigationUsers.subPropertyLists</code> is set to <b>"user"</b>,
			one might use <b>"data.stringProperties = doi title summary"</b> and
			<b>"data.dateProperties = startDate endDate"</b> as properties for the investigation;
			<b>"data.investigationUsers.stringProperties = role"</b>
			as properties for the investigationUser; and
			<b>"data.investigationUsers.user.stringProperties = fullName orcidId"</b>
			as properties for the user.
		</dd>
		<dt>metadataPrefixes</dt>
		<dd>
			A space separated list of metadata formats to be supported.
			At minimum, support for the Dublin Core format ("oai_dc") is required.
		</dd>
		<dd>
			Example value: <b>"oai_dc oai_datacite"</b>
		</dd>
		<dt>&lt;metadataPrefix&gt;.xslt</dt>
		<dd>
			For each metadata format, specify the absolute path to an XSLT definition.
			This XSLT file must be able to transform metadata from the generic XML format
			(as defined by the <code>data.xxx</code> properties above)
			into some other well defined metadata format (such as Dublin Core).
		</dd>
		<dd>
			For more information, see the example files located at "src/main/config/".
		</dd>
		<dd>
			Example: <b>"oai_dc.xslt = /home/icat/xslt/dublin_core.xsl"</b>
		</dd>
		<dt>&lt;metadataPrefix&gt;.namespace</dt>
		<dd>
			For each metadata format, specify the namespace.
		</dd>
		<dd>
			Example (official Dublin Core namespace): <b>"oai_dc.namespace =
				http://www.openarchives.org/OAI/2.0/oai_dc/"</b>
		</dd>
		<dt>&lt;metadataPrefix&gt;.schema</dt>
		<dd>
			For each metadata format, specify the link to a schema definition.
		</dd>
		<dd>
			Example (official Dublin Core schema definition): <b>"oai_dc.schema =
				http://www.openarchives.org/OAI/2.0/oai_dc.xsd"</b>
		</dd>
		<dt>responseDebug</dt>
		<dd>
			If this (optional) parameter is included and set to <b>"true"</b>, the metadata
			received when making OAI-PMH calls won't be transformed into another format.
		</dd>
		<dd>
			This means, the metadata will stay in the generic XML format
			(as defined by the <code>data.xxx</code> properties above);
			and the defined <code>metadataPrefixes</code> properties are ignored.
		</dd>
		<dd>
			This is particularly helpful for the development of custom XSLT files,
			in order to understand the structure of the generic XML format before
			attempting to transform it into some other metadata format.
		</dd>
		<dt>responseStyle</dt>
		<dd>
			Set this (optional) parameter to the URL of an XSL document which you
			want to apply to all XML responses.
		</dd>
		<dd>
			One particular use for this would be to have the XML responses transform
			into HTML documents when making OAI-PMH calls from a web browser.
		</dd>
	</dl>


	<h2>Check that icat.oai works</h2>
	<p>
		A simple standalone test is to run:
		<blockquote>
			<code>curl -k https://localhost:8181/oaipmh/request?verb=Identify -w "\n"</code>
			which should return the OAI-PMH Identify response
		</blockquote>
	</p>

</body>

</html>